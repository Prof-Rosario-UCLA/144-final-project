Planning

deploying
    -[DONE] GAE
    -[DONE] deploy frontend, backend, socket 
    -CICD w/ Github actions

routes for messages:
    -[DONE] send a msg (w/ or w/o media files) & emit to socket.io room
        -[DONE] upload for multimedia
    -[DONE] get msgs for some chat (up to a limit/before some time) -- pagination is a frontend deal
    -[DONE] add read flag maybe? depends on chat schema (this was done with a flag per chat participant)
    -[DONE] message objects contain a chatID field, which references the chat it belongs in
        -[DONE] helps w pagination

routes for chats:
    -[DONE] create chat or open current chat (upon req) 
    -[DONE] list all chats
    -[DONE] may need to overhaul and add lastMessageSent and lastTimeRead per chat for notif handling 


[DONE] Chats should have some schema field or route indicator on latest message sent in it (for frontend ordering)
[DONE] for chats and msgs routes, they need to work on server.js run

routes for users:
    -[DONE] register
    -[DONE] set username (is this the only profile modification?)
    -[DONE] login
    -[DONE] search users by UN - regex
    -[DONE] get own user info

socket stuff:
    -[DONE] when a msg object is emitted to the room, send it to all participants
    -[DONE] implement immediate update on rcv on frontend
    -[DONE] do notif feature and update order of displayed chats
    -[DONE] figure out why socket isn't working in multiple laptops? 
        -[DONE] need socket to be deployed/running on wifi IP or soemthing

SSO:
    -[DONE] Google Oauth
    -[DONE] look into jwt tokens, bcrypt
    -[DONE] make /middleware/auth stuff
    -[DONE] cookie banner

frontend:
    -[DONE] login page
        -[DONE] viewability
        -[DONE] actual sso impl
    -[DONE] set username page
        -[DONE] viewability
    -[DONE] search for users to chat with (send to existing if alr added)
    -[DONE] chatting area once you login
    -[DONE] responsive from all dimensions 320px -> whatever is max
    -[DONE] pagination handling for both chats and messages per chat (chats not needed)
    -[DONE] displaying media types in chat and chat's latest message pre view
    -[DONE] add ARIA labels to non-semantic tags

[DONE] no need for caching or WASM

object store:
    -[DONE] audio, images
    -[DONE] GCP Cloud Storage (GCS)
    -[DONE] get obj store URL upon getting the page of the chat it belongs in

camera & mic:
    -[DONE] frontend deal where it sends the blob using /upload path (msg)

PWA:
    -make something show up when offline: attempting to load, etc
        -how to test?





